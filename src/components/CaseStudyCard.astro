---
interface Props {
  href: string;
  title: string;
  summary: string;
  units: string[];
  date: string; // ISO
  tags?: string[];
}
const { href, title, summary, units, date, tags = [] } = Astro.props;
---

<article class="group rounded-2xl border border-zinc-200/60 dark:border-zinc-800/80 p-5 hover:shadow-lg transition-shadow bg-white/60 dark:bg-zinc-900/40 backdrop-blur">
  <a href={href} class="no-underline focus:outline-none focus:ring-2 focus:ring-indigo-500 rounded-lg">
    <header class="mb-3">
      <h3 class="text-xl font-semibold tracking-tight text-zinc-900 dark:text-zinc-50 group-hover:underline underline-offset-4 decoration-2">
        {title}
      </h3>
      <p class="text-sm text-zinc-500 dark:text-zinc-400 mt-1">
        {new Date(date).toLocaleDateString(undefined, { year: "numeric", month: "short", day: "2-digit" })}
      </p>
    </header>
    <p class="text-zinc-700 dark:text-zinc-300 leading-relaxed">{summary}</p>
    <div class="mt-4 flex flex-wrap gap-2">
      {units.map((u) => (
        <span class="text-xs rounded-full px-2.5 py-1 bg-zinc-100 dark:bg-zinc-800 text-zinc-700 dark:text-zinc-300 border border-zinc-200/60 dark:border-zinc-700/60">{u}</span>
      ))}
    </div>
    {tags.length ? (
      <div class="mt-3 flex flex-wrap gap-2">
        {tags.map((t) => (
          <span class="text-[10px] uppercase tracking-wide rounded px-2 py-0.5 bg-zinc-50 dark:bg-zinc-800 text-zinc-500 dark:text-zinc-400 border border-zinc-200/50 dark:border-zinc-700/50">{t}</span>
        ))}
      </div>
    ) : null}
  </a>
  <span class="sr-only">Case study card for {title}</span>
  <span class="sr-only">Published {new Date(date).toDateString()}</span>
</article>

